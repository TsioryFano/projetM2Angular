{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { catchError, of, tap } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let SesamienService = /*#__PURE__*/(() => {\n  var _class;\n  class SesamienService {\n    constructor(http) {\n      this.http = http;\n    }\n    getSesamienList() {\n      return this.http.get('api/sesamiens').pipe(tap(response => this.log(response)), catchError(error => this.handleError(error, [])));\n    }\n    getSesamienById(sesamienId) {\n      return this.http.get(`api/sesamiens/${sesamienId}`).pipe(tap(response => this.log(response)), catchError(error => this.handleError(error, undefined)));\n    }\n    searchSesamienList(term) {\n      if (term.length <= 1) {\n        return of([]);\n      }\n      return this.http.get(`api/sesamiens/?name=${term}`).pipe(tap(response => this.log(response)), catchError(error => this.handleError(error, [])));\n    }\n    updateSesamien(sesamien) {\n      const httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json'\n        })\n      };\n      return this.http.put('api/sesamiens', sesamien, httpOptions).pipe(tap(response => this.log(response)), catchError(error => this.handleError(error, null)));\n    }\n    addSesamien(sesamien) {\n      const httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json'\n        })\n      };\n      return this.http.post('api/sesamiens', sesamien, httpOptions).pipe(tap(response => this.log(response)), catchError(error => this.handleError(error, null)));\n    }\n    deleteSesamienByID(sesamienId) {\n      return this.http.delete(`api/sesamiens/${sesamienId}`).pipe(tap(response => this.log(response)), catchError(error => this.handleError(error, null)));\n    }\n    log(response) {\n      console.table(response);\n    }\n    handleError(error, errorValue) {\n      console.error(error);\n      return of(errorValue);\n    }\n    getSesamienMentionList() {\n      return ['S', 'L'];\n    }\n  }\n  _class = SesamienService;\n  _class.ɵfac = function SesamienService_Factory(t) {\n    return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n  };\n  _class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: _class,\n    factory: _class.ɵfac\n  });\n  return SesamienService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}